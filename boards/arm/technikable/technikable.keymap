/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define TBLE_ORTHO   true
// #define TBLE_MIT     true
// #define TBLE_DUAL_2U true

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
	tri_layer {
	    if-layers = <NAV_L NUM_L>;
	    then-layer = <SYM_L>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &kp TAB    &kp Q      &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O      &kp P         &kp BKSP
 &kp ESC    &kp A      &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K       &kp L      &kp SEMI      &kp QUOT
 &kp LSHFT  &kp Z      &kp X      &kp C       &kp V          &kp B          &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &kp RET
                       &kp LCTRL  &kp LALT    &mo NAV_L      &kp SPACE      &kp SPACE        &mo NUM_L      &kp RALT    &kp RCTRL
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&kp TILDE  &kp EXCL   &kp AT     &kp HASH    &kp DLLR    &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR    &kp LPAR   &kp RPAR   &kp DEL
&trans     &kp F1     &kp F2     &kp F3      &kp F4      &kp F5       &kp F6     &kp UNDER  &kp PLUS    &kp LBRC   &kp RBRC   &kp PIPE
&trans     &kp F7     &kp F8     &kp F9      &kp F10     &kp F11      &kp F12    &trans     &kp HOME    &kp PG_DN  &kp PG_UP  &kp END
                      &trans     &trans      &trans      &trans       &trans     &trans     &trans      &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp GRAVE  &kp N1     &kp N2     &kp N3      &kp N4    &kp N5      &kp N6        &kp N7         &kp N8       &kp N9       &kp N0     &trans
&kp DEL    &kp F1     &kp F2     &kp F3      &kp F4    &kp F5      &kp F6        &kp MINUS      &kp EQUAL    &kp LBKT     &kp RBKT   &kp BSLH
&trans     &kp F7     &kp F8     &kp F9      &kp F10   &kp F11     &kp F12       &trans         &trans       &trans       &trans     &trans
                      &trans     &trans      &trans    &none       &none         &trans         &trans       &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&bt BT_CLR &trans     &trans     &trans      &trans       &trans       &trans     &trans      &kp C_BRI_DN  &kp C_BRI_UP    &trans     &trans
&trans     &trans     &trans     &trans      &trans       &trans       &trans     &kp LARW    &kp DARW      &kp UARW        &kp RARW   &trans
&trans     &bt BT(0)  &bt BT(1)  &bt BT(2)   &bt BT(3)    &bt BT(4)    &trans     &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP    &trans     &trans
                      &trans     &trans      &trans       &trans       &trans     &trans      &trans        &trans
            >;
        };
       
    };
};

